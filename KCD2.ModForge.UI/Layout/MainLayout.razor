@inherits LayoutComponentBase
@* Required *@
<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudImage Src="images/mod_crafter.png" Height="40" ObjectPosition="ObjectPosition.Center" Class="pl-2" />
        <MudSpacer />
        <MudToggleIconButton Icon="@Icons.Material.Filled.LightMode" ToggledIcon="@Icons.Material.Filled.DarkMode" ToggledChanged="ToggleDarkMode" Color="Color.Inherit" Edge="Edge.End" Class="mr-1" />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End"/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        @if (!_isLoaded)
        {
            <div class="loading-screen">Lädt...</div>
        }
        else
        {
            @Body
        }
    </MudMainContent>
</MudLayout>

@code {
    private bool _isDarkMode;
    private MudThemeProvider? _mudThemeProvider;
    bool _drawerOpen = true;
    private bool _isLoaded = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isLoaded = true;
            _isDarkMode = await _mudThemeProvider!.GetSystemPreference();
            StateHasChanged();
        }
    }
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    public void ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode;
    }
}